require 'rails_helper'

RSpec.describe "Given a user that want to search message in a chat", type: :request do
  let(:chat_id) { SecureRandom.uuid }
  let(:id) { SecureRandom.uuid }
  let(:sender_id) { SecureRandom.uuid }
  let(:receiver_id) { SecureRandom.uuid }
  let(:message_payload) do
    {
      id: id,
      chat_id: chat_id,
      sender_id: sender_id,
      receiver_id: receiver_id,
      content: "Hello world"
    }
  end

  describe "When the url is GET /api/v1/messages/search/:chat_id" do
    before do
      post '/api/v1/messages', params: message_payload

      allow_any_instance_of(Shared::Infrastructure::Ai::Gemini::GeminiEmbeddingClient)
        .to receive(:embed_text) do |_, text|
        generate_embedding(text)
      end

      allow_any_instance_of(Shared::Infrastructure::Ai::Gemini::GeminiLlmClient)
        .to receive(:generate_text)
              .and_return("Content generated by AI")
    end

    it "should return 200 OK and find a message" do
      search = "Give messages where the text is Hello world"
      get "/api/v1/messages/search/#{chat_id}?q=#{search}"

      json = JSON.parse(response.body, symbolize_names: true)
      expect(json).to eq({ response: "Content generated by AI" })
    end
  end
end
